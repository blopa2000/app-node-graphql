type Query {
  getCourses: [Courses]
  getCourse(_id: ID!): Courses
  getTeachers: [Teachers]
  getTeacher(id: ID!): Teachers
}

type Mutation {
  createCourse(input: CourseInput!): Courses
  createTeacher(input: TeacherInput): Teachers
  updateTeacher(id: ID, input: updateTeacherInput): Teachers
  updateCourse(id: ID, input: updateCourseInput): Courses
  DeleteCourse(idCourse: ID, idTeacher: ID): [Courses]
}

enum Gender {
  M
  F
  Other
}

type Courses {
  _id: ID
  title: String!
  description: String!
  teacher: Teachers!
  topic: String
}

type Teachers {
  _id: ID
  firstName: String!
  lastName: String!
  gender: Gender
  aptitudes: [String]
  courses: [Courses]
}

input CourseInput {
  title: String!
  description: String!
  teacher: ID!
  topic: String
}

input TeacherInput {
  firstName: String!
  lastName: String!
  gender: Gender
  aptitudes: [String]
  courses: [ID]
}

input updateTeacherInput {
  firstName: String
  lastName: String
  gender: Gender
}

input updateCourseInput {
  topic: String
  description: String
  title: String
}
